{
  "openapi": "3.0.0",
  "info": {
    "description": "RESTful JSON API for sls.fi Generic Digital Editions platform. <br/>For additional information on the GDE project, visit the <a href='https://bitbucket.org/account/user/slssu/projects/GDE'>GDE bitbucket pages</a>. <br/><br/>Specifically, information about configuring the GDE platform can be found at the <a href='https://bitbucket.org/slssu/digital_edition_configuration'>GDE configuration repository</a>, while information about the publication tools can be found at the <a href='https://bitbucket.org/slssu/digital_edition_tools'>GDE tools repository</a>.<br/><br/>",
    "version": "1.0.0",
    "title": "SLS API",
    "contact": {
      "email": "is@sls.fi"
    },
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "http://topelius-m.sls.fi:8000",
      "description": "Staging version used by some sls.fi projects in development"
    },
    {
      "url": "https://api.sls.fi",
      "description": "Future production version used by sls.fi projects (Not yet live)"
    },
    {
      "url": "http://127.0.0.1:5000",
      "description": "Localhost version for testing purposes"
    }
  ],
  "tags": [
    {
      "name": "generic",
      "description": "Endpoints useful for all use-cases."
    },
    {
      "name": "auth",
      "description": "Endpoints for JWT-based authentication towards the API",
      "externalDocs": {
        "description": "JSON Web Tokens documentation",
        "url": "https://jwt.io/"
      }
    },
    {
      "name": "text",
      "description": "Endpoints for getting formatted display text for publications and related objects."
    },
    {
      "name": "tooltips",
      "description": "Endpoints for getting tooltip text and related information."
    },
    {
      "name": "events",
      "description": "Endpoints used for working with events and related objects, for the GDE publication tools. (Requires JWT)"
    },
    {
      "name": "publications",
      "description": "Endpoints used for working directly with publication objects, for the GDE publication tools. (Requires JWT)"
    },
    {
      "name": "files",
      "description": "Endpoints used to edit files directly, for the GDE publication tools. (Requires JWT)"
    },
    {
      "name": "collections",
      "description": "Endpoints used for working with collections of publications and facsimiles, for the GDE publication tools. (Requires JWT)"
    },
    {
      "name": "groups",
      "description": "Endpoints used for working with publication groups, for the GDE publication tools. (Requires JWT)"
    }
  ],
  "paths": {
    "/digitaledition/projects": {
      "get": {
        "summary": "Get a list of available GDE projects",
        "description": "Return a list of all GDE projects available through the API",
        "tags": [
          "generic"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": 1,
                      "name": "Topelius"
                    },
                    {
                      "id": 2,
                      "name": "Parland"
                    },
                    {
                      "id": 3,
                      "name": "GDE_Test_Project"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/html/{filename}": {
      "get": {
        "summary": "Get static HTML content for a given project",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "filename",
            "description": "The filename for the desired content, without file extension",
            "required": true,
            "schema": {
              "type": "string",
              "example": "frontpage-en"
            }
          }
        ],
        "tags": [
          "text"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "filename": "about-en",
                    "content": "<html><body>Hello World!</body></html>"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested content was not found"
          }
        }
      }
    },
    "/digitaledition/{project}/md/{file_id}": {
      "get": {
        "summary": "Get static Markdown content for a given project",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "file_id",
            "description": "The ID for the desired markdown file",
            "required": true,
            "schema": {
              "type": "string",
              "example": "sv-1-23"
            }
          }
        ],
        "tags": [
          "text"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "fileid": "1-1-23",
                    "content": "Hello World!"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested content was not found"
          }
        }
      }
    },
    "/digitaledition/{project}/static-pages-toc/{language}": {
      "get": {
        "summary": "Get table of contents for a given project",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "language",
            "description": "Desired language for table of contents",
            "required": true,
            "schema": {
              "type": "string",
              "example": "sv"
            }
          }
        ],
        "tags": [
          "text"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/digitaledition/{project}/manuscript/{publication_id}": {
      "get": {
        "summary": "Get the manuscript record(s) for a given publication ID",
        "description": "NOTE: This method essentially returns database rows directly, as a JSON object (list of rows)",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "publication_id",
            "description": "The ID for the desired publication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          }
        ],
        "tags": [
          "text"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "m_id": 1,
                      "m_filename": "foo.xml",
                      "m_publication_id": 1,
                      "m_title": "Example 1"
                    },
                    {
                      "m_id": 2,
                      "m_filename": "bar.xml",
                      "m_publication_id": 28,
                      "m_title": "Example 2"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/publication/{publication_id}": {
      "get": {
        "summary": "Get the publication record(s) for a given publication ID",
        "description": "NOTE: This method essentially returns database rows directly, as a JSON object (list of rows)",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "publication_id",
            "description": "The ID for the desired publication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          }
        ],
        "tags": [
          "text"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "URN": "blah:foo:bar:832759824",
                      "filename": "1_1_test.xml",
                      "p_id": 1,
                      "p_title": "Test publication",
                      "p_identifier": "1_1"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/text/{c_id}/{p_id}/inl": {
      "get": {
        "summary": "Get introduction text for a publication",
        "description": "Return HTML-formatted introduction text for a specific publication",
        "tags": [
          "text"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "c_id",
            "description": "The numerical collection ID for the desired publication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "in": "path",
            "name": "p_id",
            "description": "The numerical publication ID for the desired publication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "1_2_inl",
                    "content": "<div>Hello world!</div>"
                  }
                }
              }
            }
          },
          "403": {
            "description": "The requested content is not available for viewing"
          }
        }
      }
    },
    "/digitaledition/{project}/text/{c_id}/{p_id}/inl/{lang}": {
      "get": {
        "summary": "Get introduction text for a publication",
        "description": "Return HTML-formatted introduction text for a specific publication",
        "tags": [
          "text"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "c_id",
            "description": "The numerical collection ID for the desired publication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "in": "path",
            "name": "p_id",
            "description": "The numerical publication ID for the desired publication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2"
            }
          },
          {
            "in": "path",
            "name": "lang",
            "description": "The desired language",
            "required": true,
            "schema": {
              "type": "string",
              "example": "swe"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "1_2_inl",
                    "content": "<div>Hejsan världen</div>"
                  }
                }
              }
            }
          },
          "403": {
            "description": "The requested content is not available for viewing"
          }
        }
      }
    },
    "/digitaledition/{project}/text/{c_id}/{p_id}/tit": {
      "get": {
        "summary": "Get title page text for a publication",
        "description": "Return HTML-formatted title page text for a specific publication",
        "tags": [
          "text"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "c_id",
            "description": "The numerical collection ID for the desired publication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "in": "path",
            "name": "p_id",
            "description": "The numerical publication ID for the desired publication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "1_2_tit",
                    "content": "<div>Hello world!</div>"
                  }
                }
              }
            }
          },
          "403": {
            "description": "The requested content is not available for viewing"
          }
        }
      }
    },
    "/digitaledition/{project}/text/{c_id}/{p_id}/tit/{lang}": {
      "get": {
        "summary": "Get title page text for a publication",
        "description": "Return HTML-formatted title page text for a specific publication",
        "tags": [
          "text"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "c_id",
            "description": "The numerical collection ID for the desired publication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "in": "path",
            "name": "p_id",
            "description": "The numerical publication ID for the desired publication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2"
            }
          },
          {
            "in": "path",
            "name": "lang",
            "description": "The desired language",
            "required": true,
            "schema": {
              "type": "string",
              "example": "swe"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "1_2_tit",
                    "content": "<div>Hejsan världen!</div>"
                  }
                }
              }
            }
          },
          "403": {
            "description": "The requested content is not available for viewing"
          }
        }
      }
    },
    "/digitaledition/{project}/text/{c_id}/{p_id}/est": {
      "get": {
        "summary": "Get reading text for a publication",
        "description": "Return HTML-formatted reading text for a specific publication",
        "tags": [
          "text"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "c_id",
            "description": "The numerical collection ID for the desired publication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "in": "path",
            "name": "p_id",
            "description": "The numerical publication ID for the desired publication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "1_2_est",
                    "content": "<div>Hello world!</div>"
                  }
                }
              }
            }
          },
          "403": {
            "description": "The requested content is not available for viewing"
          }
        }
      }
    },
    "/digitaledition/{project}/text/{c_id}/{p_id}/com": {
      "get": {
        "summary": "Get commentary text for a publication",
        "description": "Return HTML-formatted commentary text for a specific publication",
        "tags": [
          "text"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "c_id",
            "description": "The numerical collection ID for the desired publication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "in": "path",
            "name": "p_id",
            "description": "The numerical publication ID for the desired publication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "1_2_com",
                    "content": "<div>Hello world!</div>"
                  }
                }
              }
            }
          },
          "403": {
            "description": "The requested content is not available for viewing"
          }
        }
      }
    },
    "/digitaledition/{project}/text/{c_id}/{p_id}/com/{note_id}": {
      "get": {
        "summary": "Get a specific commentary note for a publication",
        "description": "Return HTML-formatted commentary text for a specific publication",
        "tags": [
          "text"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "c_id",
            "description": "The numerical collection ID for the desired publication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "in": "path",
            "name": "p_id",
            "description": "The numerical publication ID for the desired publication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2"
            }
          },
          {
            "in": "path",
            "name": "note_id",
            "description": "The ID for the desired note",
            "required": true,
            "schema": {
              "type": "string",
              "example": "123"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "1_2_com",
                    "content": "<div>Hello world!</div>"
                  }
                }
              }
            }
          },
          "403": {
            "description": "The requested content is not available for viewing"
          }
        }
      }
    },
    "/digitaledition/{project}/text/{c_id}/{p_id}/ms": {
      "get": {
        "summary": "Get all manuscript texts for a publication",
        "description": "Return HTML-formatted manuscript texts for a specific publication",
        "tags": [
          "text"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "c_id",
            "description": "The numerical collection ID for the desired publication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "in": "path",
            "name": "p_id",
            "description": "The numerical publication ID for the desired publication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "1_2",
                    "manuscripts": [
                      {
                        "name": "Test manuscript 1",
                        "originalFilename": "1_2_1_ms.xml",
                        "manuscript_changes": null,
                        "manuscript_normalized": "<p>Testing!</p>"
                      },
                      {
                        "name": "Test manuscript 2",
                        "originalFilename": "1_2_2_ms.xml",
                        "manuscript_changes": "<p>Paragraph changed to div</p>",
                        "manuscript_normalized": "<div>Testing!</div>"
                      }
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "The requested content is not available for viewing"
          }
        }
      }
    },
    "/digitaledition/{project}/text/{c_id}/{p_id}/ms/{ms_id}": {
      "get": {
        "summary": "Get a single manuscript text for a publication",
        "description": "Return HTML-formatted manuscript text for a specific publication",
        "tags": [
          "text"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "c_id",
            "description": "The numerical collection ID for the desired publication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "in": "path",
            "name": "p_id",
            "description": "The numerical publication ID for the desired publication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2"
            }
          },
          {
            "in": "path",
            "name": "ms_id",
            "description": "The numerical manuscript ID for the specific manuscript in question",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "1_2",
                    "manuscripts": [
                      {
                        "name": "Test manuscript 2",
                        "originalFilename": "1_2_2_ms.xml",
                        "manuscript_changes": "<p>Paragraph changed to div</p>",
                        "manuscript_normalized": "<div>Testing!</div>"
                      }
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "The requested content is not available for viewing"
          }
        }
      }
    },
    "/digitaledition/{project}/text/{c_id}/{p_id}/var": {
      "get": {
        "summary": "Get all text variants for a publication",
        "description": "Return HTML-formatted text variants for a specific publication",
        "tags": [
          "text"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "c_id",
            "description": "The numerical collection ID for the desired publication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "in": "path",
            "name": "p_id",
            "description": "The numerical publication ID for the desired publication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "1_2",
                    "variations": [
                      {
                        "title": "Test variant 1",
                        "originalFilename": "1_2_var_1.xml",
                        "id": 1,
                        "content": "<p>Hello world!</p>"
                      },
                      {
                        "title": "Test variant 2",
                        "originalFilename": "1_2_var_2.xml",
                        "id": 2,
                        "content": "<p>Hello, world.</p>"
                      }
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "The requested content is not available for viewing"
          }
        }
      }
    },
    "/digitaledition/{project}/text/{c_id}/{p_id}/var/{s_id}": {
      "get": {
        "summary": "Get text variants for a specific section of a publication",
        "description": "Return HTML-formatted text variants for a specific publication",
        "tags": [
          "text"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "c_id",
            "description": "The numerical collection ID for the desired publication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "in": "path",
            "name": "p_id",
            "description": "The numerical publication ID for the desired publication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2"
            }
          },
          {
            "in": "path",
            "name": "s_id",
            "description": "Section ID for the desired section",
            "required": true,
            "schema": {
              "type": "string",
              "example": "ch1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "1_2",
                    "variations": [
                      {
                        "title": "Test variant 1",
                        "originalFilename": "1_2_var_1.xml",
                        "id": 1,
                        "content": "<p>Hello world!</p>"
                      },
                      {
                        "title": "Test variant 2",
                        "originalFilename": "1_2_var_2.xml",
                        "id": 2,
                        "content": "<p>Hello, world.</p>"
                      }
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "The requested content is not available for viewing"
          }
        }
      }
    },
    "/digitaledition/{project}/facsimiles/{c_id}/{number}/{zoom_level}": {
      "get": {
        "summary": "Retrieve a single facsimile image",
        "description": "Get a single page from a facsimile in JPEG format, at the desired zoom level (1-4). The image is returned as Content-Type image/jpeg for easy clientside rendering.",
        "tags": [
          "text"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "c_id",
            "description": "The numerical collection ID for the desired facsimile",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "in": "path",
            "name": "number",
            "description": "The page number in the facsimile collection",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2"
            }
          },
          {
            "in": "path",
            "name": "zoom_level",
            "description": "Desired image resolution, 1 being the smallest and 4 being the largest",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "1",
                "2",
                "3",
                "4"
              ],
              "example": "2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/digitaledition/tooltips/subjects": {
      "get": {
        "summary": "Get available subject tooltips",
        "description": "Get a list of available subject names, along with their ID and associated project_id.",
        "tags": [
          "tooltips"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": 1,
                      "name": "Bob McGee III",
                      "project_id": 2
                    },
                    {
                      "id": 2,
                      "name": "Slartibartfast",
                      "project_id": 2
                    },
                    {
                      "id": 3,
                      "name": "Stephen Example",
                      "project_id": 5
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/tooltips/tags": {
      "get": {
        "summary": "Get available tag tooltips",
        "description": "Get a list of available tag names, along with their ID and associated project_id.",
        "tags": [
          "tooltips"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": 1,
                      "name": "Party",
                      "project_id": 2
                    },
                    {
                      "id": 2,
                      "name": "Chair",
                      "project_id": 2
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/tooltips/locations": {
      "get": {
        "summary": "Get available location tooltips",
        "description": "Get a list of available location names, along with their ID and associated project_id.",
        "tags": [
          "tooltips"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": 1,
                      "name": "Example Plaza",
                      "project_id": 2
                    },
                    {
                      "id": 2,
                      "name": "Hotel California",
                      "project_id": 5
                    },
                    {
                      "id": 3,
                      "name": "Rock Mountain",
                      "project_id": 2
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/tooltips/subject/{id}": {
      "get": {
        "summary": "Get a tooltip for a specific subject",
        "description": "Get the name and description for a given subject",
        "tags": [
          "tooltips"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The unique numerical ID for the desired subject",
            "schema": {
              "type": "string",
              "example": "12"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "fullName": "Bob McGee III",
                    "description": "Third of the Stockholm McGees"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/tooltips/tag/{id}": {
      "get": {
        "summary": "Get a tooltip for a specific tag",
        "description": "Get the name and description for a given tag",
        "tags": [
          "tooltips"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The unique numerical ID for the desired tag",
            "schema": {
              "type": "string",
              "example": "12"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "name": "Party",
                    "description": "Party"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/tooltips/location/{id}": {
      "get": {
        "summary": "Get a tooltip for a specific location",
        "description": "Get the name and description for a given location",
        "tags": [
          "tooltips"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The unique numerical ID for the desired location",
            "schema": {
              "type": "string",
              "example": "12"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "name": "Example Plaza",
                    "description": "Thoroughly uninteresting."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/occurrences/{object_type}/{id}": {
      "get": {
        "summary": "Get events and occurrences for subject/tag/location",
        "description": "Get events and occurrences referencing a given subject, tag, or location",
        "tags": [
          "tooltips"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "object_type",
            "required": true,
            "description": "subject, location, or tag - which type of object this is",
            "schema": {
              "type": "string",
              "enum": [
                "subject",
                "location",
                "tag"
              ],
              "example": "subject"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Numerical or legacy ID for subject/location/tag",
            "schema": {
              "type": "string",
              "example": "12"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": 1,
                      "type": "legacy",
                      "description": "Legacy event listing all occurrences",
                      "occurrences": [
                        {
                          "id": 1,
                          "type": null,
                          "description": null,
                          "publication_id": 12,
                          "publicationVersion_id": 23,
                          "publicationFacsimile_id": null,
                          "publicationComment_id": null
                        },
                        {
                          "id": 2,
                          "type": null,
                          "description": null,
                          "publication_id": 15,
                          "publicationVersion_id": null,
                          "publicationFacsimile_id": 5,
                          "publicationComment_id": 1
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Register as a new user",
        "description": "Note that a new user cannot access any GDE projects until given editing rights by support. This is done by editing the database and adding the project names into the 'projects' column of the 'users' table.",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "description": "Desired credentials for new user",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "email": "test@test.com",
                  "password": "testPassword1!"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "User 'test@test.com' was created. Contact support to be given editing rights for GDE projects.",
                    "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZGVudGl0eSI6eyJzdWIiOiJ0ZXN0QHRlc3QuY29tIiwicHJvamVjdHMiOm51bGx9LCJ0eXBlIjoiYWNjZXNzIn0.XtShkUBz6AboojEi07D7S-RCCCezQFbBVHFkFMY1ZWs",
                    "refresh_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZGVudGl0eSI6eyJzdWIiOiJ0ZXN0QHRlc3QuY29tIiwicHJvamVjdHMiOm51bGx9LCJ0eXBlIjoicmVmcmVzaCJ9.hLAFlxz8_AVAL-x1kIrPbsbn0zlVJfhE9jw-gG1gPaw"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "User 'test@test.com' already exists."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Error in user registration"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Authenticate towards API",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "description": "Login credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "email": "test@test.com",
                  "password": "testPassword1!"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Logged in as 'test@test.com'",
                    "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZGVudGl0eSI6eyJzdWIiOiJ0ZXN0QHRlc3QuY29tIiwicHJvamVjdHMiOm51bGx9LCJ0eXBlIjoiYWNjZXNzIn0.XtShkUBz6AboojEi07D7S-RCCCezQFbBVHFkFMY1ZWs",
                    "refresh_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZGVudGl0eSI6eyJzdWIiOiJ0ZXN0QHRlc3QuY29tIiwicHJvamVjdHMiOm51bGx9LCJ0eXBlIjoicmVmcmVzaCJ9.hLAFlxz8_AVAL-x1kIrPbsbn0zlVJfhE9jw-gG1gPaw"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Incorrect email or password"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "summary": "Refresh login using JWT Refresh Token to receive new Access Token",
        "tags": [
          "auth"
        ],
        "parameters": [
          {
            "in": "header",
            "required": true,
            "name": "Authorization",
            "description": "JWT Refresh Token, as 'Bearer JWT_TOKEN_HERE'",
            "schema": {
              "example": "Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZGVudGl0eSI6eyJzdWIiOiJ0ZXN0QHRlc3QuY29tIiwicHJvamVjdHMiOm51bGx9LCJ0eXBlIjoicmVmcmVzaCJ9.hLAFlxz8_AVAL-x1kIrPbsbn0zlVJfhE9jw-gG1gPaw"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Logged in as 'test@test.com'",
                    "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZGVudGl0eSI6eyJzdWIiOiJ0ZXN0QHRlc3QuY29tIiwicHJvamVjdHMiOm51bGx9LCJ0eXBlIjoiYWNjZXNzIn0.XtShkUBz6AboojEi07D7S-RCCCezQFbBVHFkFMY1ZWs"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/test": {
      "post": {
        "summary": "Test JWT auth",
        "description": "Returns your JWT user identity, provided the used JWT access token is valid.",
        "tags": [
          "auth"
        ],
        "parameters": [
          {
            "in": "header",
            "required": true,
            "name": "Authorization",
            "description": "JWT Access Token, as 'Bearer JWT_TOKEN_HERE'",
            "schema": {
              "example": "Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZGVudGl0eSI6eyJzdWIiOiJ0ZXN0QHRlc3QuY29tIiwicHJvamVjdHMiOm51bGx9LCJ0eXBlIjoiYWNjZXNzIn0.XtShkUBz6AboojEi07D7S-RCCCezQFbBVHFkFMY1ZWs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "sub": "test@test.com",
                    "projects": null
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/events": {
      "get": {
        "summary": "Get list of all events",
        "tags": [
          "events"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": 1,
                      "description": "Christmas Party 1879"
                    },
                    {
                      "id": 2,
                      "name": "New Years Party 1995"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/events/search": {
      "post": {
        "summary": "Find events by description",
        "description": "Search for specific events by looking at their description text",
        "tags": [
          "events"
        ],
        "requestBody": {
          "description": "Searchquery",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "phrase": "Christmas"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": 1,
                      "description": "Christmas Party 1879"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "No phrase in POST data"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/events/new": {
      "post": {
        "summary": "Add a new event to the database",
        "description": "Create a new event object in the database",
        "tags": [
          "events"
        ],
        "requestBody": {
          "description": "Data for new event",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "type": "party",
                  "description": "Christmas Party 1879"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Created new event with ID 1",
                    "new_row": {
                      "id": 1,
                      "key": "value"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "No data provided"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Failed to create new event",
                    "reason": "DatabaseError: Failed to connect to database."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/event/{event_id}/connections": {
      "get": {
        "summary": "Get a list of connections for an event",
        "description": "Return eventConnections for an event, describing locations, subjects, and tags involved with the event.",
        "tags": [
          "events"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "event_id",
            "description": "numerical ID for the event in question",
            "required": true,
            "schema": {
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": 213,
                      "location_id": null,
                      "subject_id": 12,
                      "tag_id": null,
                      "event_id": 1
                    },
                    {
                      "id": 43782,
                      "location_id": 43,
                      "subject_id": null,
                      "tag_id": null,
                      "event_id": 1
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Event ID not found in database"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/event/{event_id}/connections/new": {
      "post": {
        "summary": "Create a new connection for an event",
        "description": "Create a new eventConnection for an event, describing locations, subjects, and tags involved with the event.",
        "tags": [
          "events"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "event_id",
            "description": "numerical ID for the event in question",
            "required": true,
            "schema": {
              "example": 1
            }
          }
        ],
        "requestBody": {
          "description": "data for new eventConnection",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "subject_id": null,
                  "location_id": 4,
                  "tag_id": 1
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Created new eventConnection with ID 1",
                    "new_row": {
                      "id": 1,
                      "key": "value"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "No data provided"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Event ID not found in database"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Failed to create new eventConnection",
                    "reason": "DatabaseError: Failed to connect to database."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/event/{event_id}/occurances": {
      "get": {
        "summary": "Get a list of occurances for an event",
        "description": "Return eventOccurances for an event, describing the publications in which this event is mentioned.",
        "tags": [
          "events"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "event_id",
            "description": "numerical ID for the event in question",
            "required": true,
            "schema": {
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": 54,
                      "description": "Mentioned in passing.",
                      "publication_id": 125,
                      "publicationVersion_id": null,
                      "publicationManuscript_id": null,
                      "publicationFacsimile_id": null,
                      "publicationComment_id": null,
                      "event_id": 1
                    },
                    {
                      "id": 4342,
                      "description": "Explained in detail.",
                      "publication_id": 558,
                      "publicationVersion_id": null,
                      "publicationManuscript_id": null,
                      "publicationFacsimile_id": null,
                      "publicationComment_id": null,
                      "event_id": 1
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Event ID not found in database"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/locations": {
      "get": {
        "summary": "Get list of all locations",
        "tags": [
          "events"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": 1,
                      "name": "Example Plaza"
                    },
                    {
                      "id": 2,
                      "name": "Example Building"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/locations/new": {
      "post": {
        "summary": "Add a new location to the database",
        "description": "Add a new location object to the database under the given project",
        "tags": [
          "events"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          }
        ],
        "requestBody": {
          "description": "Data for new location",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "name": "Example Plaza",
                  "description": "Deeply uninteresting",
                  "legacyXMLId": "123",
                  "latitude": "3.14159",
                  "longitude": "6.28318"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Created new location with ID 1",
                    "new_row": {
                      "id": 1,
                      "key": "value"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "No name in POST data"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Failed to create new location",
                    "reason": "DatabaseError: Failed to connect to database."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/subjects": {
      "get": {
        "summary": "Get list of all subjects",
        "tags": [
          "events"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": 1,
                      "fullName": "Mr Bob Example, III"
                    },
                    {
                      "id": 2,
                      "fullName": "Mrs Bobbina Example"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/subjects/new": {
      "post": {
        "summary": "Add a new subject to the database",
        "description": "Add a new subject object to the database under the given project",
        "tags": [
          "events"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          }
        ],
        "requestBody": {
          "description": "Data for new subject",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "type": "person",
                  "description": "Deeply uninteresting",
                  "firstName": "Bob",
                  "lastName": "Example",
                  "preposition": "Mr",
                  "fullName": "Mr Bob Example, III",
                  "legacyXMLId": "32429_3",
                  "dateBorn": "1992-01-01",
                  "dateDeceased": null
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Created new subject with ID 1",
                    "new_row": {
                      "id": 1,
                      "key": "value"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "No data provided"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Failed to create new subject",
                    "reason": "DatabaseError: Failed to connect to database."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/tags": {
      "get": {
        "summary": "Get list of all tags",
        "tags": [
          "events"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": 1,
                      "name": "chair"
                    },
                    {
                      "id": 2,
                      "name": "sofa"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/tag/new": {
      "post": {
        "summary": "Add a new tag to the database",
        "description": "Add a new tag object to the database under the given project",
        "tags": [
          "events"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          }
        ],
        "requestBody": {
          "description": "Data for new tag",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "type": "object",
                  "name": "chair",
                  "description": "Seating arrangement for 1 person",
                  "legacyXMLId": "2835"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Created new tag with ID 1",
                    "new_row": {
                      "id": 1,
                      "key": "value"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "No data provided"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Failed to create new tag",
                    "reason": "DatabaseError: Failed to connect to database."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/event/{event_id}/occurances/new": {
      "post": {
        "summary": "Create a new occurance for an event",
        "description": "Create a new eventOccurance for an event, describing a publication in which this event is mentioned.",
        "tags": [
          "events"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "event_id",
            "description": "numerical ID for the event in question",
            "required": true,
            "schema": {
              "example": 1
            }
          }
        ],
        "requestBody": {
          "description": "data for new eventOccurance",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "type": "mention",
                  "description": "Mentioned in passing",
                  "publication_id": 125,
                  "publicationVersion_id": null,
                  "publicationManuscript_id": null,
                  "publicationFacsimile_id": null,
                  "publicationComment_id": null
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Created new eventOccurance with ID 1",
                    "new_row": {
                      "id": 1,
                      "key": "value"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "No data provided"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Event ID not found in database"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Failed to create new eventOccurance",
                    "reason": "DatabaseError: Failed to connect to database."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/publications": {
      "get": {
        "summary": "Get all available publications in project",
        "description": "List all publications linked to the given project",
        "tags": [
          "publications"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": 1,
                      "publicationCollection_id": 1,
                      "publicationComment_id": 11,
                      "published": 1,
                      "legacyId": 11,
                      "publishedBy": "TestUser",
                      "originalFilename": "est/1_1.xml"
                    },
                    {
                      "id": 2,
                      "publicationCollection_id": 1,
                      "publicationComment_id": 12,
                      "published": 1,
                      "legacyId": 12,
                      "publishedBy": "TestUser",
                      "originalFilename": "est/1_2.xml"
                    },
                    {
                      "id": 3,
                      "publicationCollection_id": 1,
                      "publicationComment_id": 13,
                      "published": 1,
                      "legacyId": 13,
                      "publishedBy": "TestUser",
                      "originalFilename": "est/1_3.xml"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/publication/{id}": {
      "get": {
        "summary": "Get all data for a single publication",
        "description": "Get all data for a specific publication by its ID number",
        "tags": [
          "publications"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "string",
              "example": "23"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": 23,
                    "publicationCollection_id": 1,
                    "publicationComment_id": 2435,
                    "published": true,
                    "legacyId": 123,
                    "publishedBy": "Bob Bobsman",
                    "originalFilename": "est/1_23_est.xml"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/publication/{id}/versions": {
      "get": {
        "summary": "Get version details for the given publication",
        "tags": [
          "publications"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "description": "Numerical ID for the publication in question",
            "schema": {
              "type": "string",
              "example": "343"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/digitaledition/{project}/publication/{id}/manuscripts": {
      "get": {
        "summary": "Get manuscript details for the given publication",
        "tags": [
          "publications"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "description": "Numerical ID for the publication in question",
            "schema": {
              "type": "string",
              "example": "343"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/digitaledition/{project}/publication/{id}/facsimiles": {
      "get": {
        "summary": "Get facsimile details for the given publication",
        "tags": [
          "publications"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "description": "Numerical ID for the publication in question",
            "schema": {
              "type": "string",
              "example": "343"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/digitaledition/{project}/publication/{id}/comments": {
      "get": {
        "summary": "Get comment details for the given publication",
        "tags": [
          "publications"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "description": "Numerical ID for the publication in question",
            "schema": {
              "type": "string",
              "example": "343"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/digitaledition/{project}/sync_files_from_remote": {
      "post": {
        "summary": "Ensure API files are in sync",
        "description": "Syncs local API files with remote git repository",
        "tags": [
          "files"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Git repository successfully synced for project topelius",
                    "changed_files": [
                      "README.md",
                      "setup.py"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "Interal server error",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Git update failed to execute properly",
                    "reason": "Permission denied (publickey)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/update_file/by_path/{file_path}": {
      "put": {
        "summary": "Upload a new file or update an existing one",
        "description": "Accepts file_data encoded as a base64 string, decodes it into a file and pushes the file to the remote git repository for the project in question.",
        "tags": [
          "files"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "file_path",
            "description": "File path for file, relative to root of git repository",
            "schema": {
              "type": "string",
              "example": "est/1_1_est.xml"
            }
          }
        ],
        "requestBody": {
          "description": "File contents and metadata for git update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "file": "binary_file_data_encoded_as_base64",
                  "author": "test@company.com",
                  "message": "Update of file 1_1_est.xml for testing",
                  "force": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "File updated successfully in repository."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "No file in JSON data."
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "File est/1_1_est.xml has been changed in git repository since last update, please manually check file changes.",
                    "your_file": "provided_file_data_in_base64",
                    "repo_file": "existing_file_data_in_base64"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Git merge failed to execute properly.",
                    "reason": "Permission denied (publickey)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/get_latest_file/by_path/{file_path}": {
      "get": {
        "summary": "Retrieve a file from the API",
        "description": "Fetch the latest file from the remote git repository for editing or inspection, return file contents to user as base64-encoded string",
        "tags": [
          "files"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "file_path",
            "description": "File path for file, relative to root of git repository",
            "schema": {
              "type": "string",
              "example": "est/1_1_est.xml"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "filepath": "est/1_1_est.xml",
                    "file": "base64_encoded_file_data"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "The requested file was not found in the git repository."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Git update failed to execute properly.",
                    "reason": "Permission denied (publickey)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/get_tree/": {
      "get": {
        "summary": "Get a nested JSON tree of all available files for project.",
        "description": "Retrieve a listing of available file paths for the project in question as a nested JSON array. Outermost array represents the root of the repository for the project, folders inside it are mapped as arrays folder_name: array, with files being mapped as file_name: null",
        "tags": [
          "files"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "est": {
                      "1_1_est.xml": null
                    },
                    "com": {
                      "1_1_com_1.xml": null,
                      "1_1_com_2.xml": null
                    },
                    "inl": {
                      "1_1_eng.xml": null,
                      "1_1_fin.xml": null,
                      "1_1_swe.xml": null
                    },
                    "xslt": {
                      "est.xsl": null,
                      "com.xsl": null,
                      "inl.xsl": null
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Git file listing failed.",
                    "reason": "Permission denied (publickey)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/get_tree/{folder_path}": {
      "get": {
        "summary": "Get a nested JSON tree of available files in a specific folder.",
        "description": "Retrieve a listing of available file paths for the project in question as a nested JSON array. Outermost array represents the folder_path specified, folders inside it are mapped as arrays folder_name: array, with files being mapped as file_name: null",
        "tags": [
          "files"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "folder_path",
            "description": "Folder path relative to root of repository to list contents of.",
            "schema": {
              "type": "string",
              "example": "est/"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "1_1_est.xml": null
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Git file listing failed.",
                    "reason": "Permission denied (publickey)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/facsimile_collection/new": {
      "post": {
        "summary": "Create a new facsimile collection",
        "description": "Create a new publicationFacsimileCollection in the database for the given project",
        "tags": [
          "collections"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          }
        ],
        "requestBody": {
          "description": "Data for new facsimile collection",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "title": "Night Witches",
                  "description": "An example collection",
                  "folderPath": "facsimiles/night_witches/",
                  "numberOfPages": 12,
                  "startPageNumber": 1
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Created new publicationFacsimileCollection with ID 1",
                    "new_row": {
                      "id": 1,
                      "key": "value"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "No data provided."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Failed to create new publicationFacsimileCollection",
                    "reason": "Could not connect to database (Connection Timed Out)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/facsimile_collection/list": {
      "get": {
        "summary": "List all facsimile collections",
        "description": "Returns a list of all publicationFacsimileCollection objects associated with the given project",
        "tags": [
          "collections"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": 1,
                      "key": "value"
                    },
                    {
                      "id": 2,
                      "key": "value"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/facsimile_collection/{id}/link": {
      "post": {
        "summary": "Link a facsimile collection to a publication",
        "description": "Create a new publicationFacsimile post in the database, linking a facsimile collection to a publication through a specific version and/or manuscript.",
        "tags": [
          "collections"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "description": "Numerical ID for the facsimile collection",
            "schema": {
              "type": "string",
              "example": "2"
            }
          }
        ],
        "requestBody": {
          "description": "Data for new publicationFacsimile",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "publication_id": 237,
                  "publicationManuscript_id": 71,
                  "publicationVersion_id": null
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Created new publicationFacsimile with ID 1"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Publication 237 does not belong to project 'topelius'"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Could not find publication collection for publication, unable to verify that publication belongs to 'topelius'"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Failed to create new publicationFacsimile",
                    "reason": "Failed to connect to database. (connection refused)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/facsimile_collection/{id}/list_links": {
      "get": {
        "summary": "List all links to publications in the given collection",
        "tags": [
          "collections"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "description": "Numerical ID for the facsimile collection",
            "schema": {
              "type": "string",
              "example": "2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": 4,
                      "publicationFacsimileCollection_id": 2,
                      "publication_id": 5,
                      "publicationManuscript_id": 2923,
                      "publicationVersion_id": null
                    },
                    {
                      "id": 27,
                      "publicationFacsimileCollection_id": 2,
                      "publication_id": 43,
                      "publicationManuscript_id": null,
                      "publicationVersion_id": 1
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/publication_collection/list": {
      "get": {
        "summary": "List all publication collections",
        "description": "Return a list of all publicationCollection objects for the given project",
        "tags": [
          "collections"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": 1,
                      "publicationCollectionIntroduction_id": 4,
                      "publicationCollectionTitle_id": 23,
                      "project_id": 1,
                      "published": true
                    },
                    {
                      "id": 2,
                      "publicationCollectionIntroduction_id": 6,
                      "publicationCollectionTitle_id": 2,
                      "project_id": 1,
                      "published": true
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/publication_collection/new": {
      "post": {
        "summary": "Create a new publication collection",
        "description": "Create a new publicationCollection object in the database",
        "tags": [
          "collections"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          }
        ],
        "requestBody": {
          "description": "Data for new publication collection",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "name": "Test collection",
                  "datePublishedExternally": "2017-12-31",
                  "published": 1,
                  "intro_legacyID": null,
                  "title_legacyID": null
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Created new publicationCollection with ID 1"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "No data provided"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Failed to create new publicationFacsimile",
                    "reason": "Failed to connect to database. (connection refused)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/publication_collection/{id}/publications": {
      "get": {
        "summary": "List all publications in the given collection",
        "description": "Return a list of all publication objects in the given collection",
        "tags": [
          "collections"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "description": "Numerical ID for the publication collection",
            "schema": {
              "type": "string",
              "example": "5"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": null
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "example": "Found collection not part of project 'topelius' with ID 1"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Could not find collection in database"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/publication_collection/{id}/publications/new": {
      "post": {
        "summary": "Create a new publication as part of a collection",
        "description": "Create a new publication object in the database and link it to the given publicationCollection",
        "tags": [
          "collections"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "description": "Numerical ID for the publication collection",
            "schema": {
              "type": "string",
              "example": "23"
            }
          }
        ],
        "requestBody": {
          "description": "Data for new publication",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "name": "Test publication",
                  "publicationComment_id": null,
                  "published": 1,
                  "legacyId": "test_old",
                  "originalFilename": "est/whatever.xml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Created new publication with ID 1"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "No data provided"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Failed to create new publication",
                    "reason": "Failed to connect to database. (connection refused)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/publication/{id}/link_file": {
      "post": {
        "summary": "Link an XML file to a given publication",
        "description": "Link an XML file in the project's git repository to the publication in question, creating the appropriate comment, manuscript, or version object in the database.",
        "tags": [
          "publications"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "description": "Numerical ID for the publication",
            "schema": {
              "type": "string",
              "example": "23"
            }
          }
        ],
        "requestBody": {
          "description": "File metadata",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "file_type": "comment",
                  "file_path": "test/comment.xml",
                  "datePublishedExternally": "2016-31-12",
                  "published": 1,
                  "publishedBy": "Bob McGee"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Created new publicationComment with ID 4"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "POST data JSON doesn't contain required data"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Failed to create new object",
                    "reason": "Failed to connect to database (connection refused)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/publication_groups": {
      "get": {
        "summary": "List available publication groups",
        "tags": [
          "groups"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": 1,
                      "published": 1,
                      "name": "Test group"
                    },
                    {
                      "id": 2,
                      "published": 0,
                      "name": "Letters from Bob to Alice"
                    },
                    {
                      "id": 3,
                      "published": 1,
                      "name": "Letters from Alice to Bob"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/publication_group/{group_id}": {
      "get": {
        "summary": "Get all info for a single publication group",
        "tags": [
          "groups"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "group_id",
            "description": "Numerical ID for the publication group in question",
            "schema": {
              "type": "string",
              "example": "1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": 1,
                    "dateCreated": "2018-01-01T12:00",
                    "dateModified": null,
                    "deleted": 0,
                    "published": 0,
                    "name": "Test group"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/publication_group/{group_id}/publications": {
      "get": {
        "summary": "List publications in the given group",
        "description": "Give a list of publication IDs and names in the given publication group",
        "tags": [
          "groups"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "group_id",
            "description": "Numerical ID for the publication group in question",
            "schema": {
              "type": "string",
              "example": "1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": 231,
                      "name": "Test publication 1"
                    },
                    {
                      "id": 342,
                      "name": "Test publication 2"
                    },
                    {
                      "id": 404,
                      "name": "Hidden publication"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/publication/{id}/add_group": {
      "post": {
        "summary": "Add a publication to a group",
        "description": "Give a list of publication IDs and names in the given publication group",
        "tags": [
          "groups"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "id",
            "description": "Numerical ID for the publication in question",
            "schema": {
              "type": "string",
              "example": "1"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "group_id": 3
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": 1,
                    "publicationCollection_id": null,
                    "publicationComment_id": null,
                    "dateCreated": "2018-01-01T12:00",
                    "dateModified": "2018-01-01T13:37",
                    "datePublishedExternally": "2018-01-01T12:30",
                    "deleted": 0,
                    "published": 1,
                    "legacyId": null,
                    "publishedBy": "Bob McGee",
                    "originalFilename": "test_pub.xml",
                    "name": "Test publication",
                    "genre": "Test",
                    "publicationGroup_id": 3,
                    "originalPublicationDate": null
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/publication_group/new": {
      "post": {
        "summary": "Add a new publication group",
        "tags": [
          "groups"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "project",
            "description": "Name for the project in question",
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          }
        ],
        "requestBody": {
          "description": "Publication group details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "name": "Letters from Alice to Stephen",
                  "published": 1
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Created new row with ID 5"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Failed to create new group",
                    "reason": "Failed to connect to database (connection refused)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/test": {
      "post": {
        "summary": "Test JWT auth",
        "description": "Returns your JWT user identity, provided the used JWT access token is valid.",
        "tags": [
          "auth"
        ],
        "parameters": [
          {
            "in": "header",
            "required": true,
            "name": "Authorization",
            "description": "JWT Access Token, as 'Bearer JWT_TOKEN_HERE'",
            "schema": {
              "example": "Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZGVudGl0eSI6eyJzdWIiOiJ0ZXN0QHRlc3QuY29tIiwicHJvamVjdHMiOm51bGx9LCJ0eXBlIjoiYWNjZXNzIn0.XtShkUBz6AboojEi07D7S-RCCCezQFbBVHFkFMY1ZWs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "sub": "test@test.com",
                    "projects": null
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}