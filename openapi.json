{
  "openapi": "3.0.0",
  "info": {
    "description": "Unified API for all publically accessible sls.fi data",
    "version": "1.0.0",
    "title": "SLS API",
    "contact": {
      "email": "is@sls.fi"
    },
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "http://topelius-m.sls.fi:8000",
      "description": "Staging version used by some sls.fi projects in development"
    },
    {
      "url": "http://api.sls.fi",
      "description": "Future production version used by sls.fi projects (Not yet live)"
    },
    {
      "url": "http://127.0.0.1:5000",
      "description": "Localhost version for testing purposes"
    }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "Endpoints for JWT-based authentication towards the API",
      "externalDocs": {
        "description": "JSON Web Tokens documentation",
        "url": "https://jwt.io/"
      }
    },
    {
      "name": "digitaledition",
      "description": "Endpoints used by the Generic Platform for Digital Editions",
      "externalDocs": {
        "description": "Github repo for old API",
        "url": "https://github.com/slsfi/digital_editions_API"
      }
    }
  ],
  "paths": {
    "/digitaledition/{project}/html/{filename}": {
      "get": {
        "summary": "Get static HTML content for a given project",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "filename",
            "description": "The filename for the desired content, without file extension",
            "required": true,
            "schema": {
              "type": "string",
              "example": "frontpage-en"
            }
          }
        ],
        "tags": [
          "digitaledition"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "filename": "about-en",
                    "content": "<html><body>Hello World!</body></html>"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested content was not found"
          }
        }
      }
    },
    "/digitaledition/{project}/manuscript/{publication_id}": {
      "get": {
        "summary": "Get the manuscript record(s) for a given publication ID",
        "description": "NOTE: This method essentially returns database rows directly, as a JSON object (list of rows)",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "publication_id",
            "description": "The ID for the desired publication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          }
        ],
        "tags": [
          "digitaledition"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "m_id": 1,
                      "m_filename": "foo.xml",
                      "m_publication_id": 1,
                      "m_title": "Example 1"
                    },
                    {
                      "m_id": 2,
                      "m_filename": "bar.xml",
                      "m_publication_id": 28,
                      "m_title": "Example 2"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/publication/{publication_id}": {
      "get": {
        "summary": "Get the publication record(s) for a given publication ID",
        "description": "NOTE: This method essentially returns database rows directly, as a JSON object (list of rows)",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "publication_id",
            "description": "The ID for the desired publication",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          }
        ],
        "tags": [
          "digitaledition"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "URN": "blah:foo:bar:832759824",
                      "filename": "1_1_test.xml",
                      "p_id": 1,
                      "p_title": "Test publication",
                      "p_identifier": "1_1"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/text/est/{edition_id}": {
      "get": {
        "summary": "Get the reading text for a single edition",
        "description": "Returns the formatted reading text for a single readition for the given project",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "edition_id",
            "description": "The ID for the desired edition",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1_1"
            }
          }
        ],
        "tags": [
          "digitaledition"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "1_1",
                    "content": "<div><p>Hello, World!</p></div>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/text/com/{edition_id}/{note_id}": {
      "get": {
        "summary": "Get a specific note/commentary for a given edition",
        "description": "Returns the formatted text for the desired note/comment",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "edition_id",
            "description": "The ID for the desired edition",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1_1"
            }
          },
          {
            "in": "path",
            "name": "note_id",
            "description": "The ID for the desired note",
            "required": true,
            "schema": {
              "type": "string",
              "example": "en350"
            }
          }
        ],
        "tags": [
          "digitaledition"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "1_1",
                    "content": "<p>This word refers to an example.</p>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/text/com/{edition_id}": {
      "get": {
        "summary": "Get all notes/commentary for a specific edition",
        "description": "Returns the formatted notes/commentary text for the given edition.",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "edition_id",
            "description": "The ID for the desired edition",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1_1"
            }
          }
        ],
        "tags": [
          "digitaledition"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "1_1",
                    "content": "<p>This word refers to an example.</p>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/text/ms/{edition_id}": {
      "get": {
        "summary": "Get manuscript texts for a given edition",
        "description": "Returns a list of manuscript files and their formatted contents for the given edition.",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "edition_id",
            "description": "The ID for the desired edition",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1_1"
            }
          }
        ],
        "tags": [
          "digitaledition"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "1_1",
                    "manuscripts": [
                      {
                        "m_filename": "1_1_test.xml",
                        "m_id": 11,
                        "m_title": "Test manuscript",
                        "m_type": 1,
                        "manuscript_changes": "<p>Formatted changes</p>",
                        "manuscript_normalized": "<p>Full manuscript text contents.</p>"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/text/var/{edition_id}": {
      "get": {
        "summary": "Get all variants of the reading text for the given edition",
        "description": "Returns a list of all variations of the reading text for the given edition",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "edition_id",
            "description": "The ID for the desired edition",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1_1"
            }
          }
        ],
        "tags": [
          "digitaledition"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "1_1",
                    "variations": [
                      "<p>Variant 1</p>",
                      "<p>Variant 2</p>",
                      "<div>Variant 3</div>"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/text/inl/{edition_id}": {
      "get": {
        "summary": "Get preamble text for a given edition",
        "description": "Returns the formatted text for the desired edition",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "edition_id",
            "description": "The ID for the desired edition",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1_1"
            }
          }
        ],
        "tags": [
          "digitaledition"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "1_1",
                    "content": "<div><p>Hello World!</p></div>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/text/inl/{edition_id}/{language}": {
      "get": {
        "summary": "Get translated preamble for a given edition",
        "description": "Returns the formatted text for the desired edition, in the desired language",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "edition_id",
            "description": "The ID for the desired edition",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1_1"
            }
          },
          {
            "in": "path",
            "name": "language",
            "description": "The languge code for the desired text",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "fin",
                "swe",
                "eng"
              ],
              "example": "swe"
            }
          }
        ],
        "tags": [
          "digitaledition"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "1_1",
                    "content": "<div><p>Hejsan Världen!</p></div>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/text/tit/{edition_id}": {
      "get": {
        "summary": "Get title page for a given edition",
        "description": "Returns the formatted title page for the given edition",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "edition_id",
            "description": "The ID for the desired edition",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1_1"
            }
          }
        ],
        "tags": [
          "digitaledition"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "1_1",
                    "content": "<p>Title Page For Edition 1_1</p>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/{project}/text/tit/{edition_id}/{language}": {
      "get": {
        "summary": "Get translated title page for given edition",
        "description": "Returns a translation of the title page for the given edition, in the given language",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "The Digital Edition project this request concerns (topelius, parland, etc)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "topelius"
            }
          },
          {
            "in": "path",
            "name": "edition_id",
            "description": "The ID for the desired edition",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1_1"
            }
          },
          {
            "in": "path",
            "name": "language",
            "description": "The languge code for the desired text",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "fin",
                "swe",
                "eng"
              ],
              "example": "swe"
            }
          }
        ],
        "tags": [
          "digitaledition"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "1_1",
                    "content": "<p>Titelsida för 1_1</p>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/semantic_data/persons/tooltip/{person_id}": {
      "get": {
        "summary": "Get tooltip text for the given person",
        "description": "Returns a brief description of the person in question",
        "parameters": [
          {
            "in": "path",
            "name": "person_id",
            "description": "The unique string ID for the person in question",
            "required": true,
            "schema": {
              "type": "string",
              "example": "spe1"
            }
          }
        ],
        "tags": [
          "digitaledition"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "title": "Test Person",
                    "content": "Test Person is a very interesting person.",
                    "givenname": "Test",
                    "surname": "Person"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Person ID not found in database"
          }
        }
      }
    },
    "/digitaledition/semantic_data/persons/list/{data_source_id}": {
      "get": {
        "summary": "Get a list of all available persons in the given data source",
        "description": "Returns a list of database rows from the given data source",
        "parameters": [
          {
            "in": "path",
            "name": "data_source_id",
            "description": "The numeric ID for the desired data source",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "tags": [
          "digitaledition"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id_p": "spe1",
                      "title": "Test Person"
                    },
                    {
                      "id_p": "spe2",
                      "title": "Butch Deadlift"
                    },
                    {
                      "id_p": "spe3",
                      "title": "Big McLargeHuge"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/digitaledition/semantic_data/places/tooltip/{place_id}": {
      "get": {
        "summary": "Get tooltip text for the given place",
        "description": "Returns a brief description of the place in question",
        "parameters": [
          {
            "in": "path",
            "name": "place_id",
            "description": "The unique string ID for the place in question",
            "required": true,
            "schema": {
              "type": "string",
              "example": "PlId110"
            }
          }
        ],
        "tags": [
          "digitaledition"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "title": "Example Place",
                    "content": "Example Place is a very distinct and interesting place, used as an example."
                  }
                }
              }
            }
          },
          "404": {
            "description": "Place ID not found in database"
          }
        }
      }
    },
    "/digitaledition/semantic_data/places/list": {
      "get": {
        "summary": "Get a list of all available places",
        "description": "Returns a list of available places and their associated IDs",
        "tags": [
          "digitaledition"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "title": "Example Place",
                      "id": "PlId110"
                    },
                    {
                      "title": "Test Plaza",
                      "id": "PlId001"
                    },
                    {
                      "title": "Idiot Crater",
                      "id": "PlId002"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Register as a new user",
        "description": "Note that a new user cannot access any GDE projects until given editing rights by support. This is done by editing the database and adding the project names into the 'projects' column of the 'users' table.",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "description": "Desired credentials for new user",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "email": "test@test.com",
                  "password": "testPassword1!"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "User 'test@test.com' was created. Contact support to be given editing rights for GDE projects.",
                    "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZGVudGl0eSI6eyJzdWIiOiJ0ZXN0QHRlc3QuY29tIiwicHJvamVjdHMiOm51bGx9LCJ0eXBlIjoiYWNjZXNzIn0.XtShkUBz6AboojEi07D7S-RCCCezQFbBVHFkFMY1ZWs",
                    "refresh_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZGVudGl0eSI6eyJzdWIiOiJ0ZXN0QHRlc3QuY29tIiwicHJvamVjdHMiOm51bGx9LCJ0eXBlIjoicmVmcmVzaCJ9.hLAFlxz8_AVAL-x1kIrPbsbn0zlVJfhE9jw-gG1gPaw"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "User 'test@test.com' already exists."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Error in user registration"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Authenticate towards API",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "description": "Login credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "email": "test@test.com",
                  "password": "testPassword1!"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Logged in as 'test@test.com'",
                    "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZGVudGl0eSI6eyJzdWIiOiJ0ZXN0QHRlc3QuY29tIiwicHJvamVjdHMiOm51bGx9LCJ0eXBlIjoiYWNjZXNzIn0.XtShkUBz6AboojEi07D7S-RCCCezQFbBVHFkFMY1ZWs",
                    "refresh_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZGVudGl0eSI6eyJzdWIiOiJ0ZXN0QHRlc3QuY29tIiwicHJvamVjdHMiOm51bGx9LCJ0eXBlIjoicmVmcmVzaCJ9.hLAFlxz8_AVAL-x1kIrPbsbn0zlVJfhE9jw-gG1gPaw"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Incorrect email or password"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "summary": "Refresh login using JWT Refresh Token to receive new Access Token",
        "tags": [
          "auth"
        ],
        "parameters": [
          {
            "in": "header",
            "required": true,
            "name": "Authorization",
            "description": "JWT Refresh Token, as 'Bearer JWT_TOKEN_HERE'",
            "schema": {
              "example": "Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZGVudGl0eSI6eyJzdWIiOiJ0ZXN0QHRlc3QuY29tIiwicHJvamVjdHMiOm51bGx9LCJ0eXBlIjoicmVmcmVzaCJ9.hLAFlxz8_AVAL-x1kIrPbsbn0zlVJfhE9jw-gG1gPaw"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Logged in as 'test@test.com'",
                    "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZGVudGl0eSI6eyJzdWIiOiJ0ZXN0QHRlc3QuY29tIiwicHJvamVjdHMiOm51bGx9LCJ0eXBlIjoiYWNjZXNzIn0.XtShkUBz6AboojEi07D7S-RCCCezQFbBVHFkFMY1ZWs"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/test": {
      "post": {
        "summary": "Test JWT auth",
        "description": "Returns your JWT user identity, provided the used JWT access token is valid.",
        "tags": [
          "auth"
        ],
        "parameters": [
          {
            "in": "header",
            "required": true,
            "name": "Authorization",
            "description": "JWT Access Token, as 'Bearer JWT_TOKEN_HERE'",
            "schema": {
              "example": "Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZGVudGl0eSI6eyJzdWIiOiJ0ZXN0QHRlc3QuY29tIiwicHJvamVjdHMiOm51bGx9LCJ0eXBlIjoiYWNjZXNzIn0.XtShkUBz6AboojEi07D7S-RCCCezQFbBVHFkFMY1ZWs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "sub": "test@test.com",
                    "projects": null
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}